import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from statsmodels.tsa.stattools import adfuller
from statsmodels.tsa.holtwinters import ExponentialSmoothing

# Example: Load a time series dataset
# Let's assume we have monthly sales data (you can use your dataset)
data = {
    'Date': pd.date_range(start='2020-01-01', periods=24, freq='M'),
    'Sales': [200, 220, 250, 270, 300, 320, 340, 360, 380, 390, 410, 420,
              430, 450, 470, 490, 510, 530, 550, 570, 590, 610, 630, 650]
}

# Create a DataFrame
df = pd.DataFrame(data)

# Set 'Date' as the index
df.set_index('Date', inplace=True)

# Plot the time series data
plt.figure(figsize=(10, 6))
plt.plot(df['Sales'], label='Sales', color='blue')
plt.title('Monthly Sales Data')
plt.xlabel('Date')
plt.ylabel('Sales')
plt.legend()
plt.show()

# Step 1: Check if the time series is stationary (using ADF test)
result = adfuller(df['Sales'])
print("ADF Statistic:", result[0])
print("p-value:", result[1])

if result[1] <= 0.05:
    print("The time series is stationary.")
else:
    print("The time series is not stationary.")

# Step 2: Apply Holt-Winters Exponential Smoothing for forecasting
model = ExponentialSmoothing(df['Sales'], trend='add', seasonal='add', seasonal_periods=12)
hw_model = model.fit()

# Forecast the next 12 months
forecast = hw_model.forecast(steps=12)

# Plot the forecasted values
plt.figure(figsize=(10, 6))
plt.plot(df['Sales'], label='Actual Sales', color='blue')
plt.plot(forecast, label='Forecasted Sales', color='red', linestyle='--')
plt.title('Sales Forecast using Holt-Winters Exponential Smoothing')
plt.xlabel('Date')
plt.ylabel('Sales')
plt.legend()
plt.show()
