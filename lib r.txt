1. filter()
Code:
library(dplyr)
filtered_data <- BOD %>%
filter(demand > 15)
print(filtered_data)

2. select()
Code:
library(dplyr)
selected_data <- BOD %>%
select(demand)
print(selected_data)

3. mutate()
Code:
library(dplyr)
mutated_data <- BOD %>%
mutate(demandX=demand*10)
print(mutated_data)

4. arrange()
Code:
library(dplyr)
arranged_data <- BOD %>%
arrange(desc(demand))
print(arranged_data)

5. summarize()
Code:
library(dplyr)
summary_data <- BOD %>%
summarize(avg_demand= mean(demand))
print(summary_data)

6. group_by
Code:
library(dplyr)
grouped_data <- BOD %>%
group_by(demand) %>%
summarize(avg_demand= mean(demand))
print(grouped_data)

7. rename()
Code:
library(dplyr)
renamed_data <- BOD %>%
rename(DEMAND =demand)
print(renamed_data)

8. distinct
Code:
library(dplyr)
distinct_data <- BOD %>%
distinct(Time, demand)
print(distinct_data)

9. slice
Code:
library(dplyr)
sliced_data <- BOD %>%
slice(1:3)
print(sliced_data)

10. bind_rows() and bind_cols()
Code:
data1 <- BOD[1:2, ]
data2 <- BOD[4:6, ]
combined_data <- bind_rows(data1, data2)
print(combined_data)

11. joins
Code:
data1 <- data.frame(id = 1:3, value1 = c("A", "B", "C"))
data2 <- data.frame(id = 2:4, value2 = c("X", "Y", "Z"))
joined_data <- inner_join(data1, data2, by = "id")
print(joined_data)

12. pipe
Code:
result <- BOD %>%
filter(demand > 10) %>%
group_by(demand) %>%
summarize(avg_demand = mean(demand))
print(result)

2. ggplot2
Code:
library(ggplot2)
# Scatter plot of mpg vs. hp
ggplot(mtcars, aes(x = hp, y = mpg)) + geom_point() +labs(title = "Horsepower vs. MPG", x =
"Horsepower", y = "Miles per Gallon")

3. tidyr
Code:
library(tidyr)
# Sample messy dataset
data <- data.frame(
id = 1:3,
year_2023 = c(10, 15, 20),
year_2024 = c(25, 30, 35)
)
# Transform data to a tidy format
tidy_data <- data %>%
pivot_longer(cols = starts_with("year"), names_to = "year",
values_to = "value")
print(tidy_data)

4. data.table
Code:
library(data.table)
# Create a data.table
data <- data.table(mtcars)
# Calculate mean mpg by number of cylinders
result <- data[, .(mean_mpg = mean(mpg)), by = cyl]
print(result)

5. caret
Code:
library(caret)
# Splitting data into training and testing sets
data <- mtcars
set.seed(163)
trainIndex <- createDataPartition(data$mpg, p = 0.8, list = FALSE)
train_data <- data[trainIndex, ]
test_data <- data[-trainIndex, ]
# Train a linear regression model
model <- train(mpg ~ hp + wt, data = train_data, method = "lm")
print(summary(model))

